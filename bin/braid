#!/usr/bin/env ruby
$LOAD_PATH.unshift(File.expand_path(File.dirname(__FILE__) + "/../lib"))

begin
  require 'rubygems'
rescue
end
require 'main'

require 'braid'

Home = File.expand_path(ENV['HOME'] || '~')

# mostly blantantly stolen from ara's punch script
# main kicks ass!
Main {
  description <<-txt
    braid is a simple tool to help track changes to svn repositories in git.

    run 'braid help commandname' for more info.
  txt

  examples <<-txt
  txt

  mode(:init){
    description <<-txt
      initialize a new braid mirror

      only adds metadata to the config file, you must manually run "braid fetch mirrorname"

      mirror defaults to the last part of the remote path.
      if trunk is the last part, it is ignored and the previous part is used
    txt

    examples <<-txt
      . braid init svn://remote/path
      . braid init svn://remote/path local/dir
      . braid init svn://remote/path local/dir -r 4
      . braid init svn://remote/path local/dir --revision 13
    txt

    mixin :argument_remote, :optional_mirror, :option_revision

    run{
      Braid::Command.run(:init, remote, mirror, revision)
    }
  }

  mode(:fetch){
    description <<-txt
      fetches files for a new braid mirror from remote svn remote

      only works if local directory does not exist.
      if you actually want to update a mirror, see braid help update
    txt

    examples <<-txt
      . braid fetch local/dir
    txt

    mixin :argument_mirror

    run{
      Braid::Command.run(:fetch, mirror)
    }
  }

  mode(:mirror){
    description <<-txt
      initialize and fetch files for a new braid mirror

      mirror defaults to the last part of the remote path.
      if trunk is the last part, it is ignored and the previous part is used
    txt

    examples <<-txt
      . braid mirror svn://remote/path
      . braid mirror svn://remote/path local/dir
      . braid mirror svn://remote/path local/dir -r 4
      . braid mirror svn://remote/path local/dir --revision 13
    txt

    mixin :argument_remote, :optional_mirror, :option_revision

    run{
      Braid::Command.run(:mirror, remote, mirror, revision)
    }
  }


  mode(:update){
    description 'update a braid mirror, or all mirrors if none specified'

    examples <<-txt
      . braid update
      . braid update local/dir
      . braid update local/dir -r 6000
      . braid update local/dir --revision 6000
    txt

    mixin :optional_mirror, :option_revision

    run{
      Braid::Command.run(:update, mirror, revision)
    }
  }

  mode(:forget){
    description <<-txt
      remove a mirror from braid metadata

      only removes metadata, you must manually remove the local directory
    txt

    examples <<-txt
      . braid forget local/dir
    txt

    mixin :argument_mirror

    run{
      Braid::Command.run(:forget, mirror)
    }
  }

  mode(:version){
    description 'show braid version'

    run{
      puts "braid #{Braid::VERSION::STRING}"
    }
  }

  mixin :argument_mirror do
    argument(:mirror){
      attr
    }
  end

  mixin :optional_mirror do
    argument(:mirror){
      optional
      attr
    }
  end

  mixin :argument_remote do
    argument(:remote){
      attr
    }
  end

  mixin :option_revision do
    option(:revision, :r){
      optional
      argument :required
      desc 'remote svn revision'
      attr
    }
  end

  run{ help! }
}

