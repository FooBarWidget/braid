#!/usr/bin/env ruby
$LOAD_PATH.unshift(File.expand_path(File.dirname(__FILE__) + "/../lib"))

begin
  require 'rubygems'
rescue
end
require 'main'

require 'braid'

Home = File.expand_path(ENV['HOME'] || '~')

# mostly blantantly stolen from ara's punch script
# main kicks ass!
Main {

  description <<-txt
    braid is a simple tool to help track git or svn repositories inside a git repository.

    run 'braid help commandname' for more info.
    
    all operations will be executed in the braid/track branch
    you can then merge it back or cherry pick changes
  txt

  examples <<-txt
  txt

  mode(:add){
    description <<-txt
      add a new mirror to be tracked:

        * adds metadata about the mirror to .braids
        * adds the git or git svn remotes to .git
        * fetches and merges remote code into given directory (mirror)

      mirror_type defaults:

        * svn://path          # => svn
        * git://path          # => git
        * http://path/trunk   # => svn
        * http://path.git     # => git

      mirror_name defaults:

        * remote/path         # => path
        * remote/path/trunk   # => path
        * remote/path.git     # => path
    txt

    examples <<-txt
      . braid add svn://remote/path
      . braid add svn://remote/path local/dir
      . braid add git://remote/path local/dir
      . braid add http://remote/path.git local/dir
      . braid add http://remote/path --type git local/dir
      . braid add svn://remote/path --branch notmaster
    txt

    mixin :argument_remote, :option_type, :optional_mirror, :option_branch, :option_rails_plugin

    run{
      Braid::Command.run(:add, remote, {"type" => type, "mirror" => mirror, "branch" => branch, "rails_plugin" => rails_plugin})
    }
  }

  mode(:update){
    description <<-txt
      update a braid mirror:

        * get new changes from remote

      defaults to updating all mirrors if none is specified
      
      if you want nicer commit messages from the automatic merges, do this:
        git config --global mirror.summary true
    txt

    examples <<-txt
      . braid update
      . braid update local/dir
    txt

    mixin :optional_mirror

    run{
      Braid::Command.run(:update, mirror)
    }
  }

  mode(:remove){
    description <<-txt
      remove a mirror

        * removes metadata from .braids
        * removes the local directory and commits the removal
        * does NOT remove the git and git svn remotes in case you still need them around
    txt

    examples <<-txt
      . braid remove local/dir
    txt

    mixin :argument_mirror

    run{
      Braid::Command.run(:remove, mirror)
    }
  }

  mode(:version){
    description 'show braid version'

    run{
      puts "braid #{Braid::VERSION::STRING}"
    }
  }

  mixin :argument_mirror do
    argument(:mirror){
      attr
    }
  end

  mixin :optional_mirror do
    argument(:mirror){
      optional
      attr
    }
  end

  mixin :argument_remote do
    argument(:remote){
      attr
    }
  end

  mixin :option_type do
    option(:type, :t){
      optional
      argument :required
      desc 'mirror type'
      attr
    }
  end

  mixin :option_branch do
    option(:branch, :b){
      optional
      argument :required
      desc 'remote branch name'
      attr
    }
  end

  mixin :option_rails_plugin do
    option(:rails_plugin, :p){
      optional
      desc 'added mirror is a rails plugin'
      attr
    }
  end

  run{ help! }
}

